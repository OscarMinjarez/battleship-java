package org.itson.battleshippresentation.view;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import org.itson.battleshippresentation.modelView.StrategyModelView;

/**
 *
 * @author PabloCeasxr
 */
public class StrategyView extends javax.swing.JFrame {

   private StrategyModelView strategyModelView;
    private static StrategyView instance;
    private ImageIcon boatIcon;
    private JLabel boatLabel;
    private Point initialClick;
    private JPanel gridPanel; 
    private JLayeredPane layeredPane;
    /**
     * Creates new form StrategyView
     */
    private StrategyView() {
    initComponents();
    initLayeredPane();
    initBoat();
    initGridPanel();
    
    setLocationRelativeTo(null); 
    setSize(800, 600); 
    setResizable(false); 
    pack();
       
       
    }

    public static StrategyView getInstance() {
        if (instance == null) {
            instance = new StrategyView();
        }
        return instance;
    }

       private void initBoat() {
        boatIcon = new ImageIcon("C:\\Users\\cotiz\\Documents\\battleship-java\\BattleshipPresentation\\src\\main\\java\\org\\itson\\battleshippresentation\\view\\Images\\Barco (Custom) (1).png");
        boatLabel = new JLabel(boatIcon);
        boatLabel.setSize(new Dimension(boatIcon.getIconWidth(), boatIcon.getIconHeight())); // Establece el tamaño

        // Añadir el barco al JLayeredPane
        layeredPane.add(boatLabel, JLayeredPane.DEFAULT_LAYER); 

        // Posicionar el barco en el JLayeredPane
        boatLabel.setLocation(0, 0); // Ajusta la posición inicial

        // Escucha de mouse para la posición inicial
        boatLabel.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                initialClick = e.getLocationOnScreen();
            }
        });

        // Movimiento suave del barco
        boatLabel.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                Point current = e.getLocationOnScreen();
                int xMoved = current.x - initialClick.x;
                int yMoved = current.y - initialClick.y;
                int x = boatLabel.getX() + xMoved;
                int y = boatLabel.getY() + yMoved;
                boatLabel.setLocation(x, y);
                initialClick = current;
            }
        });
    }

    private void initGridPanel() {
        gridPanel = new JPanel();
        gridPanel.setLayout(new GridLayout(10, 10));
        gridPanel.setSize(new Dimension(400, 400)); // Asegúrate de que tenga un tamaño

        // Añadir 100 botones a la cuadrícula (10x10)
        for (int i = 0; i < 100; i++) {
            JButton button = new JButton();
            button.setPreferredSize(new Dimension(20, 20));
            gridPanel.add(button);
        }

        // Añadir la cuadrícula al JLayeredPane
        layeredPane.add(gridPanel, JLayeredPane.DEFAULT_LAYER); 

        // Establecer la posición de la cuadrícula
        gridPanel.setLocation(200, 0); // Coloca la cuadrícula en la parte superior izquierda
    }

    private void initLayeredPane() {
        layeredPane = new JLayeredPane();
        layeredPane.setPreferredSize(new Dimension(400, 400)); 
        getContentPane().add(layeredPane, java.awt.BorderLayout.CENTER);
    }

    public void clickReady() {
    }

    public void clickPutShipOnTable() {
    }

    public void clickRotateShip() {
    }

    public void clickExitGame() {
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // </editor-fold>
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelCountShips = new javax.swing.JLabel();
        jLabelWaitingEnemy = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setAutoRequestFocus(false);
        setLocationByPlatform(true);
        setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel1.setText("Strategy screen");
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jLabelCountShips.setText("Ships left: 11");
        getContentPane().add(jLabelCountShips, java.awt.BorderLayout.LINE_END);

        jLabelWaitingEnemy.setText("Waiting enemy :");
        getContentPane().add(jLabelWaitingEnemy, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StrategyView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StrategyView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StrategyView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StrategyView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                getInstance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCountShips;
    private javax.swing.JLabel jLabelWaitingEnemy;
    // End of variables declaration//GEN-END:variables
}
